{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Number","name","number","Filter","value","onchangehandler","onChange","PersonForm","onsubmit","values","handlers","newName","newNumber","changeInputHandler","changeNumberHandler","onSubmit","type","Notification","not","style","display","padding","color","backgroundColor","fontSize","marginTop","Persons","persons","deleteHandler","map","person","handler","Button","onClick","App","useState","setPersons","setNewName","setNewNumber","filter","setFilter","notification","setNotification","personsToShow","includes","console","log","useEffect","personService","e","target","preventDefault","alert","newP","uptodate_persons","window","confirm","current_id","find","updatedPerson","setTimeout","catch","error","newPerson","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ca87688e.chunk.js","sourcesContent":["import axios from 'axios'\n\n// const baseUrl = 'http://localhost:3001/persons'\n// const baseUrl = 'http://localhost:3001/api/persons'\n// const baseUrl = 'https://secret-beyond-34850.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl).then(response => response.data)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(baseUrl+'/'+id, newObject).then(response => response.data)\n}\n\nconst delPerson = (id) => {\n  return axios.delete(baseUrl+'/'+id).then(response => response.data)\n}\n\nexport default {\n  getAll, \n  create, \n  update,\n  delPerson\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\n\nconst Number = ({name, number}) => {\n    return (\n        <span>{name} {number}</span>\n      )\n}\n\nconst Filter = ({value, onchangehandler}) => (\n        <>\n          Filter shown with <input value={value} onChange={onchangehandler} />\n          </>\n  )\n\nconst PersonForm = ({onsubmit, values, handlers}) => {\n      const [newName, newNumber] = values\n      const [changeInputHandler, changeNumberHandler] = handlers\n\n      return (\n          <form onSubmit={onsubmit}>\n            <div>name: <input value={newName} onChange={changeInputHandler}/></div>\n            <div>number: <input value={newNumber} onChange={changeNumberHandler} /></div>\n            <div>\n              <button type=\"submit\">add</button>\n            </div>\n          </form>\n        )\n}\n\nconst Notification = ({not}) => {\n  const {value, type} = not  \n  if (value === null) return null\n\n  const style = { \n    display: 'inline-block',\n    padding: 10,\n    color: (type === 'success' ? 'green' : 'red'),\n    backgroundColor: (type === 'success' ? '#E8F5E9' : '#FFCDD2' ),\n    fontSize: '.95rem'\n  }\n\n  return (\n      <div style={{marginTop: 25}}>\n        <span style={style}>{value}</span>\n      </div>\n    )\n}\n\nconst Persons = ({persons, deleteHandler}) => (persons.map( (person) => <p key={person.id}><Number name={person.name} number={person.number} /> <Button value=\"Delete\" handler={() => deleteHandler(person.name, person.id)} /><br/></p>))\n\nconst Button = ({value, handler}) => (<button onClick={handler}>{value}</button>)\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n\n  const [notification, setNotification] = useState({value: null, type: null})\n\n  const changeInputHandler = e => setNewName(e.target.value)\n  const changeNumberHandler = e => setNewNumber(e.target.value)\n  const changeFilter = e => setFilter(e.target.value)\n\n  const filteredPersons = () => persons.filter ( person => person.name.includes(filter))\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault()\n\n    // const names = persons.map( (person) => person.name)\n\n    if (newName === '')  {\n      alert('Type a valid name')\n      return false\n    }\n\n    const newP = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .getAll()\n      .then( response => {\n          console.log('Here')\n          const uptodate_persons = response\n\n          const names = response.map( (person) => person.name)\n\n          if (names.includes(newName)) {\n            if(window.confirm(newName + ' is already added to phonebook, replace the old number with a new one?')) {\n\n              let current_id = uptodate_persons.find(person => person.name === newName).id\n\n              personService.update(current_id, newP)\n                  .then(updatedPerson => {\n                    setPersons(uptodate_persons.map(person => person.id !== current_id ? person : updatedPerson))\n                    setNewName('')\n                    setNewNumber('')\n                    setFilter('')\n\n                    setNotification({value: 'The number of '+newName+' has been correctly updated.', type: 'success'})\n                    setTimeout(() => {setNotification({value: null, type: null})}, 5000);\n                  })\n                  .catch( error => {\n                    console.log('Error with updating a new person', error.response.data)\n\n                    setNotification({value: error.response.data.error, type: 'error'})\n                    setTimeout(() => {setNotification({value: null, type: null})}, 5000);\n\n                  })\n            }\n          } else {\n            personService.create(newP)\n                .then(newPerson => {\n                  setPersons(uptodate_persons.concat(newPerson))\n                  setNewName('')\n                  setNewNumber('')\n                  setFilter('')\n\n                  setNotification({value: newName+' has been correctly added to the phonebook.', type: 'success'})\n                  setTimeout(() => {setNotification({value: null, type: null})}, 5000);\n                })\n                .catch( error => {\n                  console.log('Error with creating a new person', error.response.data)\n\n                  setNotification({value: error.response.data.error, type: 'error'})\n                  setTimeout(() => {setNotification({value: null, type: null})}, 5000);\n                })\n          }\n      })\n\n    \n  }\n\n  const deleteHandler = (name, id) => {\n    if (window.confirm(\"Delete \"+name+\"?\")) {\n      personService.delPerson(id)\n        .then( deletedPerson => {\n          console.log('Person deleted', deletedPerson)\n\n          setPersons( persons.filter(person => person.id !== id))\n          setNewName('')\n          setNewNumber('')\n          setFilter('')\n        })\n        .catch(error => {\n            setNotification({value: 'Error while trying to delete '+name+' from the phonebook.', type: 'error'})\n            setTimeout(() => {setNotification({value: null, type: null})}, 5000);\n        })\n    }    \n  }\n\n  const personsToShow = filter !== '' ? filteredPersons() : persons\n\n\n  console.log('Rendering')\n\n  const effect = () => {\n    console.log('Calling the effect')\n\n    personService\n      .getAll()\n      .then( response => {\n          setPersons(response)\n      })\n  }\n  useEffect(effect, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter value={filter} onchangehandler={changeFilter} />\n      <br/>\n\n      <h3>Add new</h3>\n      <PersonForm onsubmit={onSubmitHandler} values={[newName, newNumber]} handlers={[changeInputHandler, changeNumberHandler]} />\n\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deleteHandler={deleteHandler} />\n\n      <Notification not={notification} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}